angular.module("message-center.service",[]),angular.module("message-center",["ngAnimate","message-center.service","message-center.templates"]).run(["$compile","$document","$rootScope",function(e,s,t){var n=e("<message-center></message-center>")(t);s.find("body").append(n)}]).directive("messageCenter",["$timeout","MessageService",function(e,s){function t(e,s){for(var t,n=0;n<e.length;n++)if(e[n].id===s.id){t=n;break}return-1!==t&&e.splice(t,1),e}function n(s,a){if(0!==s.length){var r=s.shift();a.push(r),e(function(){t(a,r),s.length>0&&e(function(){n(s,a)},r.timeout)},r.timeout)}}var a=0;return{restrict:"E",scope:{},templateUrl:"templates/message-center/message-center.html",controller:["$scope",function(e){e.removeItem=function(s){s.type?t(e.impMessages,s):t(e.messages,s)}}],link:function(e){e.messages=[],e.impMessages=[];var t=[],r=[];s.registerListener("broadcast",function(i,o){var c={classes:[],message:i,id:a++,timeout:angular.isDefined(o.timeout)&&angular.isNumber(o.timeout)?o.timeout:s.config.timeout};o&&(o.important&&(c.type="important"),o.color&&c.classes.push(o.color));var m,g;c.type?(m=r,g=e.impMessages):(m=t,g=e.messages),m.push(c),g.length<s.config.max&&1===m.length&&n(m,g)})}}}]).directive("messageItem",function(){return{replace:!0,restrict:"E",templateUrl:"templates/message-center/message-item.html"}}),function(e){try{e=angular.module("message-center.templates")}catch(s){e=angular.module("message-center.templates",[])}e.run(["$templateCache",function(e){e.put("templates/message-center/message-center.html",'<span class="message-center-important"><message-item ng-repeat="message in impMessages" class="message-animation"></message-item></span> <span class="message-center-regular"><message-item ng-repeat="message in messages" class="message-animation"></message-item></span>')}])}(),angular.module("message-center.service").factory("MessageService",function(){function e(e,s){s=s||{},s.color="warning",this.listeners.warning.forEach(function(t){t(e,s)}),this.broadcast(e,s)}var s=function(e){this.config={disabled:!1,max:3,timeout:3e3},this.disabledHistory=[],this.history=[],this.listeners={broadcast:[],disable:[],info:[],error:[],success:[],warning:[]},angular.extend(this.config,e)};return s.prototype.registerListener=function(e,s){if("warn"===e&&(e="warning"),!this.listeners[e])throw new Error("Topic "+e+" not supported");this.listeners[e].push(s)},s.prototype.configure=function(e){angular.extend(this.config,e)},s.prototype.getHistory=function(){return this.history},s.prototype.getDisabledHistory=function(){return this.disabledHistory},s.prototype.clearHistory=function(){this.history=[]},s.prototype.broadcast=function(e,s){var t={message:e,opts:s};this.config.disabled?this.disabledHistory.push(t):this.history.push(t),this.listeners.broadcast.forEach(function(t){t(e,s)})},s.prototype.danger=function(e,s){s=s||{},s.color="danger",this.listeners.danger.forEach(function(t){t(e,s)}),this.broadcast(e,s)},s.prototype.error=function(e,s){s=s||{},s.color="danger",this.listeners.error.forEach(function(t){t(e,s)}),this.broadcast(e,s)},s.prototype.info=function(e,s){s=s||{},s.color="info",this.listeners.info.forEach(function(t){t(e,s)}),this.broadcast(e,s)},s.prototype.success=function(e,s){s=s||{},s.color="success",this.listeners.success.forEach(function(t){t(e,s)}),this.broadcast(e,s)},s.prototype.warn=e,s.prototype.warning=e,new s}),function(e){try{e=angular.module("message-center.templates")}catch(s){e=angular.module("message-center.templates",[])}e.run(["$templateCache",function(e){e.put("templates/message-center/message-item.html",'<div class="message-box" ng-class="message.classes"><span class="message">{{message.message}}</span> <button type="button" class="close" aria-hidden="true" ng-click="removeItem(message)">&times;</button></div>')}])}();